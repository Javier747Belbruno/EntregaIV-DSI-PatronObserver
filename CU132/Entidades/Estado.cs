//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CU132.Entidades
{
    using System;
    using System.Collections.Generic;
    
    public partial class Estado
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Estado()
        {
            this.HistorialEstado = new HashSet<HistorialEstado>();
            this.Mesa = new HashSet<Mesa>();
        }
    
        public int id_estado { get; set; }
        public string ambito { get; set; }
        public string nombre { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<HistorialEstado> HistorialEstado { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Mesa> Mesa { get; set; }


        public bool EsAmbitoDetallePedido(){
            if (ambito == "DetallePedido")
                return true;
            return false;
        }

        public bool EsEnPreparacion(){
            if (nombre == "En preparacion")
                return true;
            return false;
        }

        public bool EsListoParaServir(){
            if (nombre == "Listo para servir")
                return true;
            return false;
        }

        // override object.Equals
        public override bool Equals(object obj)
        {
            // Perform an equality check on two States (Scope and Name have to be the same).
            if (obj == null || GetType() != obj.GetType())
                return false;
            Estado e = (Estado)obj;
            return ambito.Equals(e.ambito) && nombre.Equals(e.nombre);
        }

    }
}
